package kirjasto.test;
// Generated by ComTest BEGIN
import java.io.File;
import kirjasto.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.13 22:20:54 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KirjailijatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta83 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta83() throws SailoException {    // Kirjailijat: 83
    Kirjailijat kirjailijat = new Kirjailijat(); 
    Kirjailija haru1 = new Kirjailija(); haru1.vastaaHarukiMurakami(1, "Haruki Murakami"); 
    Kirjailija haru2 = new Kirjailija(); haru2.vastaaHarukiMurakami(1, "Haruki Murakami"); 
    String tiedNimi = "testikirjat"; 
    File ftied = new File(tiedNimi+".dat"); 
    ftied.delete(); 
    try {
    kirjailijat.lueTiedostosta(tiedNimi); 
    fail("Kirjailijat: 93 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    kirjailijat.lisaa(haru1); 
    kirjailijat.lisaa(haru2); 
    kirjailijat.tallenna(); 
    kirjailijat = new Kirjailijat(); 
    kirjailijat.lueTiedostosta(tiedNimi); 
    Iterator<Kirjailija> i = kirjailijat.iterator(); 
    assertEquals("From: Kirjailijat line: 100", haru1.toString(), i.next().toString()); 
    assertEquals("From: Kirjailijat line: 101", haru2.toString(), i.next().toString()); 
    assertEquals("From: Kirjailijat line: 102", false, i.hasNext()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator202 */
  @Test
  public void testIterator202() {    // Kirjailijat: 202
    Kirjailijat kirjailijat = new Kirjailijat(); 
    Kirjailija esim1 = new Kirjailija(1); kirjailijat.lisaa(esim1); 
    Kirjailija esim2 = new Kirjailija(2); kirjailijat.lisaa(esim2); 
    Kirjailija esim3 = new Kirjailija(3); kirjailijat.lisaa(esim3); 
    Iterator<Kirjailija> i2 = kirjailijat.iterator(); 
    assertEquals("From: Kirjailijat line: 212", esim1, i2.next()); 
    assertEquals("From: Kirjailijat line: 213", esim2, i2.next()); 
    assertEquals("From: Kirjailijat line: 214", esim3, i2.next()); 
    try {
    assertEquals("From: Kirjailijat line: 215", esim1, i2.next()); 
    fail("Kirjailijat: 215 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int kirIdt[] = { 1, 2, 3} ; 
    for ( Kirjailija kir:kirjailijat ) {
    assertEquals("From: Kirjailijat line: 221", kirIdt[n], kir.getKirjailijaId()); n++; 
    }
    assertEquals("From: Kirjailijat line: 224", 3, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKirjailija238 */
  @Test
  public void testAnnaKirjailija238() {    // Kirjailijat: 238
    Kirjailijat kirjailijat = new Kirjailijat(); 
    Kirjailija esim1 = new Kirjailija(1); kirjailijat.lisaa(esim1); 
    Kirjailija esim2 = new Kirjailija(2); kirjailijat.lisaa(esim2); 
    Kirjailija esim3 = new Kirjailija(3); kirjailijat.lisaa(esim3); 
    assertEquals("From: Kirjailijat line: 244", esim2, kirjailijat.annaKirjailija(2)); 
    assertEquals("From: Kirjailijat line: 245", esim1, kirjailijat.annaKirjailija(1)); 
  } // Generated by ComTest END
}